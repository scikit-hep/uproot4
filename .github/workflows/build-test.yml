name: "Test build"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        platform: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.5", "3.6", "3.7", "3.8"]
        exclude:
          - platform: "macos-latest"
            python-version: "3.5"
          - platform: "macos-latest"
            python-version: "3.7"
          - platform: "windows-latest"
            python-version: "3.6"
          - platform: "windows-latest"
            python-version: "3.7"
        # platform: ["windows-latest"]
        # python-version: ["3.5", "3.6", "3.7", "3.8"]

    runs-on: "${{ matrix.platform }}"

    steps:
      - uses: "actions/checkout@v2"

      - name: "Get conda"
        shell: "bash -l {0}"
        run: |
          if [[ "${{ runner.os }}" = "Linux" ]]; then
            MINICONDA_FILENAME=Miniconda3-latest-Linux-x86_64.sh
            curl -o $MINICONDA_FILENAME "https://repo.continuum.io/miniconda/$MINICONDA_FILENAME"
            bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3
          elif [[ "${{ runner.os }}" = "macOS" ]]; then
            MINICONDA_FILENAME=Miniconda3-latest-MacOSX-x86_64.sh
            curl -o $MINICONDA_FILENAME "https://repo.continuum.io/miniconda/$MINICONDA_FILENAME"
            bash ${MINICONDA_FILENAME} -b -f -p $HOME/miniconda3
          elif [[ "${{ runner.os }}" = "Windows" ]]; then
            MINICONDA_FILENAME=Miniconda3-latest-Windows-x86_64.exe
            curl -o $MINICONDA_FILENAME "https://repo.continuum.io/miniconda/$MINICONDA_FILENAME"
            ./Miniconda3-latest-Windows-x86_64.exe //InstallationType=JustMe //RegisterPython=0 //S
          fi

      - name: "Setup paths"
        shell: "bash -l {0}"
        run: |
          echo "::add-path::$HOME/miniconda3/bin"
          echo "::add-path::$HOME/miniconda3/Scripts"

      - name: "Create conda environment"
        shell: "bash -l {0}"
        run: |
          echo $PATH
          conda init bash
          conda update conda
          conda config --add channels conda-forge
          conda create -n test python=${{ matrix.python-version }}
          conda activate test
          conda env list
          conda info

      - name: "Install most dependencies"
        shell: "bash -l {0}"
        run: |
          conda env list
          conda install numpy pandas pytest flake8 lz4 python-xxhash
          pip install scikit-hep-testdata
          conda list

      - name: "Install Awkward"
        shell: "bash -l {0}"
        run: |
          conda env list
          pip install awkward1
          conda list

      - name: "Install XRootD"
        if: "${{ matrix.python-version != 3.5  &&  !contains(matrix.platform, 'macos')  &&  !contains(matrix.platform, 'windows') }}"
        shell: "bash -l {0}"
        run: |
          conda env list
          conda install xrootd
          conda list

      - name: "Run flake8"
        shell: "bash -l {0}"
        run: python -m flake8

      - name: "Run pytest"
        shell: "bash -l {0}"
        run: python -m pytest -vv tests
